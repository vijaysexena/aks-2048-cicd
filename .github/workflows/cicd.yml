# name: Build, Push & Deploy to AKS

# on:
#   push:
#     branches:
#       - main

# env:
#   ACR_NAME: vijayacr2025     
#   RESOURCE_GROUP: azure-eks      
#   AKS_CLUSTER_NAME: azure-aks   
#   K8S_NAMESPACE: kubernetes

# jobs:
#   build-push-deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repo
#       uses: actions/checkout@v3

#     - name: Log in to Azure CLI
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}

#     - name: Get AKS credentials
#       run: az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER_NAME --overwrite-existing

#     - name: Log in to ACR
#       uses: azure/docker-login@v1
#       with:
#         login-server: ${{ env.ACR_NAME }}.azurecr.io
#         username: ${{ secrets.ACR_USERNAME }}
#         password: ${{ secrets.ACR_PASSWORD }}

#     - name: Build and push Docker image
#       run: |
#         IMAGE_TAG=${{ github.sha }}
#         docker build -t $ACR_NAME.azurecr.io/web2048-autoscaler:$IMAGE_TAG .
#         docker push $ACR_NAME.azurecr.io/web2048-autoscaler:$IMAGE_TAG

#     - name: Deploy to AKS
#       run: |
#         kubectl set image deployment/web2048-autoscaler web2048-autoscaler=$ACR_NAME.azurecr.io/web2048-autoscaler:${{ github.sha }} -n $K8S_NAMESPACE
#         kubectl rollout status deployment/web2048-autoscaler -n $K8S_NAMESPACE


name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
